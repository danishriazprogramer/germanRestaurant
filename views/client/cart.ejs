<!DOCTYPE html>
<html>

<head>
  <%- include('partials/head.ejs'); %>
</head>

<body>
  <div class="container-xxl bg-white p-0">
      <main class="page">
        <section class="shopping-cart dark">
          <div class="container">
            <div class="block-heading">
              <h2>Food Cart</h2>
              <p>Savor the flavors of the city streets with our gourmet food cart, serving up delicious bites crafted
                with locally
                sourced ingredients.</p>
            </div>
            <div class="content">
              <div class="row">
                <div class="col-md-12 col-lg-8">
                  <div id="food-container" class="items">      
                  </div>
                </div>
                <div class="col-md-12 col-lg-4">
                  <div class="summary">
                    <h3>Summary</h3>
                    <div class="summary-item"><span class="text">Subtotal</span><span class=" subtotal price"></span></div>
                    <div class="summary-item"><span class="text">Discount</span><span class="discount price"></span></div>
                    <div class="summary-item"><span class="text">Total</span><span class="total price"></span></div>
                    <button type="button" class="btn btn-primary btn-lg btn-block"  data-bs-toggle="modal" data-bs-target="#checkoutModal">Cash On Delivery</button>

                    <button type="button" class="btn btn-primary btn-lg btn-block"  id="paypal" onclick="paypal()" >PayPal</button>

  
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>
      </main>
      <%- include('./partials/footer.ejs'); %>

        <!-- Back to Top -->
        <a href="#" class="btn btn-lg btn-primary rounded-circle back-to-top"><i class="bi bi-arrow-up"></i></a>
  </div>
 
  
  <!-- Modal -->
  <div class="modal fade" id="checkoutModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h1 class="modal-title fs-5" id="exampleModalLabel">Checkout</h1>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="checkoutForm">
            <div class="mb-3">
              <label for="exampleInputEmail1" class="form-label">Email address</label>
              <input type="email" placeholder="Enter Email" class="form-control" id="exampleInputEmail1" name="email" aria-describedby="emailHelp">
            </div>
            <div class="mb-3">
              <label for="phone" class="form-label">Phone</label>
              <input type="tel" placeholder="Enter Phone No" class="form-control" id="phone" name="phone">
            </div>
            <div class="mb-3">
              <label for="address" class="form-label">Full Address</label>
              <input type="text" placeholder="Please Enter Full Address" class="form-control" id="address" name="address">
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
          </form>
        </div>
      </div>
    </div>
  </div>

</body>

<!-- jQuery and jQuery Validation -->
<%- include('./partials/scripts.ejs'); %>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  
  <script>
   
  </script>
  
  <script>
    $(document).ready(function () {

    
    function getOrder() {
    let cartOrder = window.localStorage.getItem("order");
    return cartOrder ? cartOrder : "";
    }
    let orderToken =  getOrder();
    console.log("The get order from local storage is ", getOrder())

      const url = 'http://jokerpalace.de/api/user/getOrdersOnUserSide';
      const payload = {
        "orderToken": orderToken,
      };
      const payloadJSON = JSON.stringify(payload);

      const getCart = async () => {
    try {
        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: payloadJSON
        })
        .then(response => response.json())
        .then((data) => {
            // Handle API response
            console.log("API response:", data);
            console.log("The get cart response",  data.orderToken.orders);

            const allOrders = data?.orders;

            const container = document.getElementById("food-container");
            container.innerHTML = '';

            data.orderToken.orders.forEach(order => {
                const productHTML = `
                    <div class="product row">
                        <div class="col-md-3">
                            <img class="cart-img" src="${order.imageSrc}">
                        </div>
                        <div class="col-md-8 info">
                            <div class="row">
                                <div class="col-md-5 product-name">
                                    <div class="product-name">
                                        <div class="brand-color">${order.productName}</div>
                                        <div class="product-info">
                                            <p>${order?.description}</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 quantity">
                                    <label for="quantity">Quantity:</label>
                                    <input id="quantity" type="number" disabled value="${order.Quenty}" class="form-control quantity-input">
                                </div>
                                <div class="col-md-3 price">
                                    <span>${order.prodcuPrice}  â‚¬ </span>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                container.innerHTML += productHTML;
            });

          let subtotalElement = document.querySelector('.subtotal');
          let discountElement = document.querySelector('.discount'); // Second summary-item
         // const shippingElement = document.querySelectorAll('.summary-item .price')[2]; // Third summary-item
          let totalElement = document.querySelector('.total'); // Fourth summary-item

          // Setting the values
          subtotalElement.textContent = `${data.totalPrice} â‚¬`;
          discountElement.textContent = `${data.discount}`;
          totalElement.textContent = `${data.totalPriceAfterDiscount} â‚¬`;

          // Calculate the total after applying discount and adding shipping
          //const totalAfterDiscountAndShipping = totalPrice - discountPrice + totalElement;
          //totalElement.textContent = `$${totalAfterDiscountAndShipping}`;

        })
        .catch(error => {
            console.error('Error:', error);
        });
    } catch (error) {
        console.error('Error:', error);
    }
};


      getCart();
    

      
      $('#checkoutForm').validate({
        rules: {
          email: {
            required: true,
            email: true
          },
          phone: {
            required: true,
            minlength: 10
          },
          address: {
            required: true
          }
        },
        messages: {
          email: {
            required: "Please enter your email address",
            email: "Please enter a valid email address"
          },
          phone: {
            required: "Please enter your phone number",
            minlength: "Phone number must be at least 10 characters long"
          },
          address: {
            required: "Please enter your full address"
          }
        },
        errorElement: 'div',
        errorPlacement: function (error, element) {
          error.addClass('invalid-feedback');
          element.closest('.mb-3').append(error);
        },
        highlight: function (element, errorClass, validClass) {
          $(element).addClass('is-invalid').removeClass('is-valid');
        },
        unhighlight: function (element, errorClass, validClass) {
          $(element).removeClass('is-invalid').addClass('is-valid');
        },
       submitHandler: function (form) {
          $('#checkoutModal').modal('hide');

   //       const formData = $(form).serialize();


    //            function getAllCookies() {
    //   const cookies = document.cookie.split("; ");
    //   const cookieMap = {};

    //   cookies.forEach((cookie) => {
    //     const [name, value] = cookie.split("=");
    //     cookieMap[name] = decodeURIComponent(value);
    //   });

    //   return cookieMap;
    // }

    // let orderToken = getAllCookies();
    // orderToken = orderToken.order || "";
    function getOrder() {
    let cartOrder = window.localStorage.getItem("order");
    return cartOrder ? cartOrder : "";
    }
    let orderToken =  getOrder();
    console.log("The get order from local storage is ", getOrder())
//          const formDataObject = {};

          // formData.split('&').forEach(function (item) {
          //   const keyValue = item.split('=');
          //   formDataObject[keyValue[0]] = decodeURIComponent(keyValue[1]);
          // });
        var email = document.getElementById("exampleInputEmail1").value 
          console.log("ðŸš€ ~ email:", email)

          var phone = document.getElementById("phone").value 
          console.log("ðŸš€ ~ phone:", phone)

          var address = document.getElementById("address").value 
          console.log("ðŸš€ ~ address:", address)
          const payload = {
             email :email,
             phone:phone,
             address:address, 
             orderToken:orderToken,
          } 
          let payloadJSON = JSON.stringify(payload);
          console.log("ðŸš€ ~ payloadJSON:", payloadJSON)
          

          const apiUrl = 'http://jokerpalace.de/api/user/getCart';

          fetch(apiUrl, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: payloadJSON,
          })
            // .then(response => {
            //   if (!response.ok) {
            //     throw new Error('Network response was not ok');
            //   }
            //   return response.json();
            // })
            .then(data => {
              console.log('API Response:', data);
              Swal.fire({
                title: 'Success!',
                text: 'Order Placed Successfully',
                icon: 'success',
                confirmButtonText: 'OK'
              });
              // Retrieve the cart order from local storage
let cartOrder = window.localStorage.getItem("order");

// Check if the cart order exists
if (cartOrder) {
    // If it exists, remove it from local storage
    window.localStorage.removeItem("order");
    console.log("Order removed from local storage.");
} else {
    console.log("No order found in local storage.");
}


let cartCount = window.localStorage.getItem("cartCount");

// Check if the cart cartCount exists
if (cartCount) {
    // If it exists, remove it from local storage
    window.localStorage.removeItem("cartCount");
    console.log("cartCount removed from local storage.");
} else {
    console.log("No cartCount found in local storage.");
}


            })
            .catch(error => {
              console.error('Error:', error);
              Swal.fire({
                title: 'Error!',
                text: 'Failed to place order. Please try again later.',
                icon: 'error',
                confirmButtonText: 'OK'
              });
            });
        }

      });
    });

    <!-- paypal funtion  -->
  function paypal(){
  function getOrder() {
    let cartOrder = window.localStorage.getItem("order");
    return cartOrder ? cartOrder : "";
    }
    let orderToken1 =  getOrder();

     const payload = {
             orderToken:orderToken1,
          } 
          let payloadJSON = JSON.stringify(payload);
          console.log("ðŸš€ ~ payloadJSON:", payloadJSON)
    console.log("The get order from local storage is ", getOrder())
    const apiUrl = 'http://jokerpalace.de/payment/getpayment';

          fetch(apiUrl, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: payloadJSON,
          })

  }

  </script>
</body>
</html>