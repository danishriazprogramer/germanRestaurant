<!DOCTYPE html>
<html>

<head>
  <%- include('partials/head.ejs'); %>
</head>

<body>
  <div class="container-xxl bg-white p-0">
      <main class="page">
        <section class="shopping-cart dark">
          <div class="container">
            <div class="block-heading">
              <h2>Food Cart</h2>
              <p>Savor the flavors of the city streets with our gourmet food cart, serving up delicious bites crafted
                with locally
                sourced ingredients.</p>
            </div>
            <div class="content">
              <div class="row">
                <div class="col-md-12 col-lg-8">
                  <div id="food-container" class="items">      
                  </div>
                </div>
                <div class="col-md-12 col-lg-4">
                  <div class="summary">
                    <h3>Summary</h3>
                    <div class="summary-item"><span class="text">Subtotal</span><span class="price">$360</span></div>
                    <div class="summary-item"><span class="text">Discount</span><span class="price">$0</span></div>
                    <div class="summary-item"><span class="text">Shipping</span><span class="price">$0</span></div>
                    <div class="summary-item"><span class="text">Total</span><span class="price">$360</span></div>
                    <button type="button" class="btn btn-primary btn-lg btn-block"  data-bs-toggle="modal" data-bs-target="#checkoutModal">Checkout</button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>
      </main>
      <%- include('./partials/footer.ejs'); %>

        <!-- Back to Top -->
        <a href="#" class="btn btn-lg btn-primary rounded-circle back-to-top"><i class="bi bi-arrow-up"></i></a>
  </div>
 
  
  <!-- Modal -->
  <div class="modal fade" id="checkoutModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h1 class="modal-title fs-5" id="exampleModalLabel">Checkout</h1>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="checkoutForm">
            <div class="mb-3">
              <label for="exampleInputEmail1" class="form-label">Email address</label>
              <input type="email" placeholder="Enter Email" class="form-control" id="exampleInputEmail1" name="email" aria-describedby="emailHelp">
            </div>
            <div class="mb-3">
              <label for="phone" class="form-label">Phone</label>
              <input type="tel" placeholder="Enter Phone No" class="form-control" id="phone" name="phone">
            </div>
            <div class="mb-3">
              <label for="address" class="form-label">Full Address</label>
              <input type="text" placeholder="Please Enter Full Address" class="form-control" id="address" name="address">
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
          </form>
        </div>
      </div>
    </div>
  </div>

</body>

<!-- jQuery and jQuery Validation -->
<%- include('./partials/scripts.ejs'); %>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  
  <script>
   
  </script>
  
  <script>
    $(document).ready(function () {

      function getAllCookies() {
      const cookies = document.cookie.split('; ');
      const cookieMap = {};

      cookies.forEach(cookie => {
        const [name, value] = cookie.split('=');
        cookieMap[name] = decodeURIComponent(value);
      });

      return cookieMap;
    }

   
      const orderToken = getAllCookies();
      console.log("ðŸš€ ~ orderToken:", orderToken)
      if (orderToken.order === undefined) {
        orderToken.order = ""
      }

      const url = 'http://jokerpalace.de:8080/api/user/getOrdersOnUserSide';
      const payload = {
        "orderToken": orderToken.order,
      };
      const payloadJSON = JSON.stringify(payload);

      const getCart = async () => {
    try {
        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: payloadJSON
        })
        .then(response => response.json())
        .then((data) => {
            // Handle API response
            console.log("API response:", data);
            console.log("The get cart response", data);

            const allOrders = data?.orders;

            const container = document.getElementById("food-container");
            container.innerHTML = '';

            data.orders.forEach(order => {
                const productHTML = `
                    <div class="product row">
                        <div class="col-md-3">
                            <img class="cart-img" src="${order.imageSrc}">
                        </div>
                        <div class="col-md-8 info">
                            <div class="row">
                                <div class="col-md-5 product-name">
                                    <div class="product-name">
                                        <div class="brand-color">${order.productName}</div>
                                        <div class="product-info">
                                            <p>${order?.description}</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 quantity">
                                    <label for="quantity">Quantity:</label>
                                    <input id="quantity" type="number" value="${order.Quenty}" class="form-control quantity-input">
                                </div>
                                <div class="col-md-3 price">
                                    <span>${order.Price}</span>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                container.innerHTML += productHTML;
            });
        })
        .catch(error => {
            console.error('Error:', error);
        });
    } catch (error) {
        console.error('Error:', error);
    }
};


      getCart();
    

      
      // // $('#checkoutForm').validate({
      // //   rules: {
      // //     email: {
      // //       required: true,
      // //       email: true
      // //     },
      // //     phone: {
      // //       required: true,
      // //       minlength: 10
      // //     },
      // //     address: {
      // //       required: true
      // //     }
      // //   },
      // //   messages: {
      // //     email: {
      // //       required: "Please enter your email address",
      // //       email: "Please enter a valid email address"
      // //     },
      // //     phone: {
      // //       required: "Please enter your phone number",
      // //       minlength: "Phone number must be at least 10 characters long"
      // //     },
      // //     address: {
      // //       required: "Please enter your full address"
      // //     }
      // //   },
      // //   errorElement: 'div',
      // //   errorPlacement: function (error, element) {
      // //     error.addClass('invalid-feedback');
      // //     element.closest('.mb-3').append(error);
      // //   },
      // //   highlight: function (element, errorClass, validClass) {
      // //     $(element).addClass('is-invalid').removeClass('is-valid');
      // //   },
      // //   unhighlight: function (element, errorClass, validClass) {
      // //     $(element).removeClass('is-invalid').addClass('is-valid');
      // //   },
      // //  submitHandler: function (form) {
      // //     $('#checkoutModal').modal('hide');

      // //     const formData = $(form).serialize();
      // //       function getAllCookies() {
      // //      const cookies = document.cookie.split("; ");
      // //      const cookieMap = {};

      // //      cookies.forEach((cookie) => {
      // //        const [name, value] = cookie.split("=");
      // //        cookieMap[name] = decodeURIComponent(value);
      // //      });

      // //      return cookieMap;
      // //    }

      // //    let orderToken = getAllCookies();
      // //    orderToken = orderToken.order || "";

      // //     const formDataObject = {};

      // //     formData.split('&').forEach(function (item) {
      // //       const keyValue = item.split('=');
      // //       formDataObject[keyValue[0]] = decodeURIComponent(keyValue[1]);
      // //     });

      // //     const payload = {
      // //       ...formDataObject , 
      // //       order: orderToken
      // //     }
          

      // //     const apiUrl = 'http://jokerpalace.de:8080/api/user/createOrder';

      // //     fetch(apiUrl, {
      // //       method: 'POST',
      // //       headers: {
      // //         'Content-Type': 'application/json'
      // //       },
      // //       body: JSON.stringify(payload)
      // //     })
      // //       .then(response => {
      // //         if (!response.ok) {
      // //           throw new Error('Network response was not ok');
      // //         }
      // //         return response.json();
      // //       })
      // //       .then(data => {
      // //         console.log('API Response:', data);
      // //         Swal.fire({
      // //           title: 'Success!',
      // //           text: 'Order Placed Successfully',
      // //           icon: 'success',
      // //           confirmButtonText: 'OK'
      // //         });
      // //       })
      // //       .catch(error => {
      // //         console.error('Error:', error);
      // //         Swal.fire({
      // //           title: 'Error!',
      // //           text: 'Failed to place order. Please try again later.',
      // //           icon: 'error',
      // //           confirmButtonText: 'OK'
      // //         });
      // //       });
      // //   }

      // });
    });
  </script>

  
</body>
</html>